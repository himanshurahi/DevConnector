[{"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/App.js":"1","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/setAuthToken.js":"2","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/main/main.js":"3","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/dashboard.js":"4","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/post/post.js":"5","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/auth/login/login.js":"6","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/createProfile/create_profile.js":"7","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/profile.action.js":"8","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/post/comments/comments.js":"9","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/alert.reducer.js":"10","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/alert.action.js":"11","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/posts.js":"12","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/auth/signup/signup.js":"13","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/editProfile/edit_profile.js":"14","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/DashboardList/EducationList/EducationList.js":"15","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/index.js":"16","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/auth.reducer.js":"17","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/profile.reducer.js":"18","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/routing/privatroute.js":"19","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/addPost/AddPost.js":"20","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/profiles/profile/profile.js":"21","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/DashboardList/ExperienceList/ExperienceList.js":"22","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/post.reducer.js":"23","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/auth.action.js":"24","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/navbar/navbar.js":"25","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/profiles/profiles.js":"26","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/post.action.js":"27","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/addEducation/addEducaton.js":"28","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/addExperience/add_experience.js":"29","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/alert/alert.js":"30"},{"size":2566,"mtime":1606984455227,"results":"31","hashOfConfig":"32"},{"size":254,"mtime":1607170874292,"results":"33","hashOfConfig":"32"},{"size":555,"mtime":1607157538352,"results":"34","hashOfConfig":"32"},{"size":3179,"mtime":1607168409402,"results":"35","hashOfConfig":"32"},{"size":2369,"mtime":1606991158430,"results":"36","hashOfConfig":"32"},{"size":4411,"mtime":1607158684772,"results":"37","hashOfConfig":"32"},{"size":10158,"mtime":1606641448297,"results":"38","hashOfConfig":"32"},{"size":5130,"mtime":1607249573853,"results":"39","hashOfConfig":"32"},{"size":5101,"mtime":1606992199942,"results":"40","hashOfConfig":"32"},{"size":585,"mtime":1606559161838,"results":"41","hashOfConfig":"32"},{"size":450,"mtime":1607158345834,"results":"42","hashOfConfig":"32"},{"size":4130,"mtime":1607172663990,"results":"43","hashOfConfig":"32"},{"size":5143,"mtime":1606556398123,"results":"44","hashOfConfig":"32"},{"size":10675,"mtime":1606984896618,"results":"45","hashOfConfig":"32"},{"size":2330,"mtime":1606936028223,"results":"46","hashOfConfig":"32"},{"size":1327,"mtime":1607159699030,"results":"47","hashOfConfig":"32"},{"size":1264,"mtime":1606996123398,"results":"48","hashOfConfig":"32"},{"size":3033,"mtime":1606848688600,"results":"49","hashOfConfig":"32"},{"size":582,"mtime":1607160979651,"results":"50","hashOfConfig":"32"},{"size":3944,"mtime":1606996024102,"results":"51","hashOfConfig":"32"},{"size":9158,"mtime":1606913619042,"results":"52","hashOfConfig":"32"},{"size":2526,"mtime":1606918353103,"results":"53","hashOfConfig":"32"},{"size":2116,"mtime":1606990817872,"results":"54","hashOfConfig":"32"},{"size":2283,"mtime":1607249549225,"results":"55","hashOfConfig":"32"},{"size":3264,"mtime":1607157435172,"results":"56","hashOfConfig":"32"},{"size":2980,"mtime":1607157414351,"results":"57","hashOfConfig":"32"},{"size":3024,"mtime":1607249562413,"results":"58","hashOfConfig":"32"},{"size":6639,"mtime":1606642606970,"results":"59","hashOfConfig":"32"},{"size":8080,"mtime":1606640908694,"results":"60","hashOfConfig":"32"},{"size":300,"mtime":1606505403082,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1iikbjv",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/App.js",["151","152","153","154","155","156"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport MyNavbar from \"./components/navbar/navbar\";\nimport React from \"react\";\nimport Main from \"./components/main/main\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Login from \"./components/auth/login/login\";\nimport Signup from \"./components/auth/signup/signup\";\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport axio from \"axios\";\nimport { loadUser } from \"./actions/auth.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PrivateRouter from \"./routing/privatroute\";\nimport CreateProfile from \"./components/dashboard/createProfile/create_profile\";\nimport EditProfile from \"./components/dashboard/editProfile/edit_profile\";\nimport AddExperience from \"./components/dashboard/addExperience/add_experience\";\nimport AddEducation from \"./components/dashboard/addEducation/addEducaton\";\nimport Profiles from \"./components/profiles/profiles\";\nimport Profile from \"./components/profiles/profile/profile\";\nimport Posts from \"./components/posts/posts\";\nimport Post from \"./components/posts/post/post\";\nimport AddPost from \"./components/posts/addPost/AddPost\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n\n  const isAuth = useSelector((state) => {\n    return state.auth.isAuth;\n  });\n\n  return (\n    <div>\n      <MyNavbar />\n      <Route path=\"/\" exact component={Main}></Route>\n      <Route path=\"/login\" exact component={Login}></Route>\n      <Route path=\"/signup\" exact component={Signup}></Route>\n      <PrivateRouter\n        path=\"/dashboard\"\n        exact\n        component={Dashboard}\n      ></PrivateRouter>\n      <PrivateRouter\n        path=\"/create-profile\"\n        exact\n        component={CreateProfile}\n      ></PrivateRouter>\n      <PrivateRouter\n        path=\"/edit-profile\"\n        exact\n        component={EditProfile}\n      ></PrivateRouter>\n      <PrivateRouter\n        path=\"/add-experience\"\n        exact\n        component={AddExperience}\n      ></PrivateRouter>\n      <PrivateRouter\n        path=\"/add-education\"\n        exact\n        component={AddEducation}\n      ></PrivateRouter>\n      <Route path=\"/profiles\" exact component={Profiles}></Route>\n      <Route path=\"/profile/:id\" exact component={Profile}></Route>\n      <PrivateRouter path=\"/posts\" exact component={Posts}></PrivateRouter>\n      <PrivateRouter path=\"/post/:id\" exact component={Post}></PrivateRouter>\n      <PrivateRouter path=\"/add-post\" exact component={AddPost}></PrivateRouter>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n",["157","158"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/setAuthToken.js",[],["159","160"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/main/main.js",["161"],"import React from \"react\";\nimport \"./main.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector } from \"react-redux\";\n\nfunction Main() {\n  return (\n    <div className=\"main\">\n      <h1>\n        <b>Dev Connector</b>\n      </h1>\n      <h3>A Place Where you met developers</h3>\n      <Button href=\"/profiles\" variant=\"primary\">\n        Browse\n      </Button>{\" \"}\n      <Button\n        href=\"https://github.com/himanshurahi/DevConnector\"\n        variant=\"info\"\n      >\n        Github\n      </Button>\n    </div>\n  );\n}\n\nexport default Main;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/dashboard.js",["162","163","164"],"import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./dashboard.css\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { getCurrentProfile } from \"../../actions/profile.action\";\nimport MyAlerts from \"../alert/alert\";\nimport ExperienceList from \"./DashboardList/ExperienceList/ExperienceList\";\nimport EducationList from \"./DashboardList/EducationList/EducationList\";\nfunction Dashboard(props) {\n  const AuthData = useSelector((state) => {\n    return state.auth;\n  });\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state) => {\n    return state.profile.profileLoading;\n  });\n\n  const username = useSelector((state) => {\n    return state.auth.AuthData.username;\n  });\n\n  const edit = useSelector((state) => {\n    return state.profile.profile;\n  });\n\n  const showAlert = useSelector((state) => {\n    return state.alert.showAlert;\n  });\n\n  const profile = useSelector((state) => {\n    return state.profile.profile;\n  });\n\n  const isAuth = localStorage.getItem(\"token\");\n  React.useEffect(() => {\n    dispatch(getCurrentProfile());\n  }, [dispatch]);\n\n  React.useLayoutEffect(() => {\n    dispatch({ type: \"CLEAR_PROFILE\" });\n  }, [dispatch]);\n\n  let dataToDisplay = !loading ? (\n    <Container className=\"dashboard\">\n      {showAlert && <MyAlerts />}\n      <h1>\n        <i className=\"fa fa-user\" aria-hidden=\"true\"></i> <b>Dashboard</b>\n      </h1>\n\n      <h3>Welcome {username} </h3>\n      <Row>\n        <Col xs={6} lg={2}>\n          {!edit ? (\n            <Button\n              className=\"MyButton\"\n              onClick={() => props.history.push(\"/create-profile\")}\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Create Profile\n            </Button>\n          ) : (\n            <Button\n              className=\"MyButton\"\n              onClick={() => props.history.push(\"/edit-profile\")}\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Edit Profile\n            </Button>\n          )}\n        </Col>\n        <Col xs={6} lg={2}>\n          <Button\n            className=\"MyButton\"\n            onClick={() => props.history.push(\"/add-experience\")}\n          >\n            <i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Add\n            Experience\n          </Button>\n        </Col>\n        <Col\n          xs={6}\n          lg={2}\n          className=\"myButton\"\n          onClick={() => props.history.push(\"/add-education\")}\n        >\n          <Button className=\"MyButton\">\n            <i className=\"fa fa-book\" aria-hidden=\"true\"></i> Add Education\n          </Button>\n        </Col>\n      </Row>\n\n      <ExperienceList experiences={edit ? profile.experience : []} />\n      <EducationList educations={edit ? profile.education : []} />\n    </Container>\n  ) : (\n    <div className=\"mySpinner\">\n      <Spinner variant=\"primary\" animation=\"grow\" />\n    </div>\n  );\n  return dataToDisplay;\n}\n\nexport default withRouter(Dashboard);\n",["165","166"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/post/post.js",["167","168","169","170","171"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/esm/Spinner\";\nimport { getSinglePost } from \"../../../actions/post.action\";\nimport \"./post.css\";\nimport Comments from \"./comments/comments\";\nfunction Post(props) {\n  const dispatch = useDispatch();\n\n  const post = useSelector((data) => {\n    return data.post.post;\n  });\n\n  const loading = useSelector((state) => {\n    return state.post.loading;\n  });\n\n  React.useLayoutEffect(() => {\n    dispatch({ type: \"CLEAR_POST\" });\n  }, []);\n\n  React.useEffect(() => {\n    dispatch(getSinglePost(props.match.params.id, props));\n  }, []);\n\n  return (\n    <React.Fragment>\n      {!loading ? (\n        <div className=\"container\">\n          <Row className=\"mb-5 mt-5\">\n            <Col>\n              <Card bg={\"dark\"} text={\"white\"} className=\"mb-2\">\n                <Card.Body>\n                  <Card.Title style={{ textTransform: \"capitalize\" }}>\n                    {post.title}{\" \"}\n                  </Card.Title>\n                  <Card.Text>{post.body}</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <small className=\"text-muted\">\n                    Posted By :{\" \"}\n                    {post.user == null ? (\n                      <span style={{ color: \"grey\" }}>User Deleted</span>\n                    ) : (\n                      post.user.username\n                    )}{\" \"}\n                    On {new Date(post.date).toLocaleDateString()}\n                  </small>\n\n                  <small className=\"text-muted mx-4\">\n                    Total Likes: {post.like && post.like.length}\n                  </small>\n                </Card.Footer>\n              </Card>\n            </Col>\n          </Row>\n          <Comments post_id={props.match.params.id} comments={post.comments} />\n        </div>\n      ) : (\n        <Spinner\n          style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n          animation=\"grow\"\n          variant=\"primary\"\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(Post);\n",["172","173"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/auth/login/login.js",["174","175","176"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./login.css\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { login } from \"../../../actions/auth.action\";\n\nfunction Login(props) {\n  const loading = useSelector((state) => {\n    return state.alert.loading;\n  });\n\n  const showAlert = useSelector((state) => {\n    return state.alert.showAlert;\n  });\n\n  //   const isAuth = localStorage.getItem(\"token\");\n  const isAuth = useSelector((state) => {\n    return state.auth.isAuth;\n  });\n  const dispatch = useDispatch();\n\n  if (isAuth) {\n    return <Redirect to=\"/dashboard\"></Redirect>;\n  }\n\n  return (\n    <div className=\"login\">\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validate={(values) => {\n          const errors = {};\n\n          if (!values.password) {\n            errors.password = \"Required\";\n          }\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          dispatch(login(values, props));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            {showAlert && <MyAlerts />}\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                {errors.email && touched.email && errors.email}\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                {errors.password && touched.password && errors.password}\n              </Form.Group>\n              {loading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Login\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(Login);\n",["177","178"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/createProfile/create_profile.js",["179","180","181","182","183","184","185","186","187","188"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Formik, Field } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { login } from \"../../../actions/auth.action\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { createProfile } from \"../../../actions/profile.action\";\n\nfunction CreateProfile(props) {\n  const [loading, setloading] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const btnLoading = useSelector(state => {\n      return state.profile.btnLoading\n  })\n\n  return (\n    <div className=\"login\">\n      <Formik\n        initialValues={{\n          status: \"developer\",\n          company: \"\",\n          website: \"\",\n          location: \"\",\n          skills: \"\",\n          bio: \"\",\n          githubusername: \"\",\n\n          facebook: \"\",\n          twitter: \"\",\n          instagram: \"\",\n        }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.status) {\n            errors.status = \"Required\";\n          }\n\n          if (!values.company) {\n            errors.company = \"Required\";\n          }\n          if (!values.website) {\n            errors.website = \"Required\";\n          }\n          if (!values.location) {\n            errors.location = \"Required\";\n          }\n          if (!values.skills) {\n            errors.skills = \"Required\";\n          }\n          if (!values.bio) {\n            errors.bio = \"Required\";\n          }\n          if (!values.bio) {\n            errors.githubusername = \"Required\";\n          }\n\n          //   if (!values.password) {\n          //     errors.password = \"Required\";\n          //   }\n\n          //   if (!values.email) {\n          //     errors.email = \"Required\";\n          //   } else if (\n          //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          //   ) {\n          //     errors.email = \"Invalid email address\";\n          //   }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n          dispatch(createProfile(values, false));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Select Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"status\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                >\n                  <option value=\"developer\">Developer</option>\n                  <option value=\"teacher\">Teacher</option>\n                  <option value=\"student\">Student</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Company</Form.Label>\n                <Form.Control\n                  name=\"company\"\n                  type=\"text\"\n                  placeholder=\"Company Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  isInvalid={!!errors.company}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.company}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"website\">\n                <Form.Label>Website</Form.Label>\n                <Form.Control\n                  name=\"website\"\n                  type=\"text\"\n                  placeholder=\"Website\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.website}\n                  isInvalid={!!errors.website}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.website}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"location\">\n                <Form.Label>Location</Form.Label>\n                <Form.Control\n                  name=\"location\"\n                  type=\"text\"\n                  placeholder=\"Location\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.location}\n                  isInvalid={!!errors.location}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.location}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"skills\">\n                <Form.Label>Skills</Form.Label>\n                <Form.Control\n                  name=\"skills\"\n                  type=\"text\"\n                  placeholder=\"Skills\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.skills}\n                  isInvalid={!!errors.skills}\n                />\n                <Form.Text className=\"text-muted\">\n                  Please use comma seprated values (eg, HTML,CSS,PHP).\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.skills}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"githubusername\">\n                <Form.Label>Github username</Form.Label>\n                <Form.Control\n                  name=\"githubusername\"\n                  type=\"text\"\n                  placeholder=\"Github username\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.githubusername}\n                  isInvalid={!!errors.githubusername}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.githubusername}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"bio\">\n                <Form.Label>Bio</Form.Label>\n                <Form.Control\n                  name=\"bio\"\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"A Short Bio of yourself\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.bio}\n                  isInvalid={!!errors.bio}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.bio}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Accordion defaultActiveKey=\"0\" style={{ marginBottom: \"20px\" }}>\n                <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"1\">\n                  <i className=\"fa fa-share-square\" aria-hidden=\"true\"></i> Add\n                  Social Network Link\n                </Accordion.Toggle>\n\n                <Accordion.Collapse eventKey=\"1\" style={{ marginTop: \"20px\" }}>\n                  <React.Fragment>\n                    <Form.Group controlId=\"twitter\">\n                      <Form.Control\n                        name=\"twitter\"\n                        type=\"text\"\n                        placeholder=\"Twitter\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.twitter}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"facebook\">\n                      <Form.Control\n                        name=\"facebook\"\n                        type=\"text\"\n                        placeholder=\"Facebook\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.facebook}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"instagram\">\n                      <Form.Control\n                        name=\"instagram\"\n                        type=\"text\"\n                        placeholder=\"Instagram\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.instagram}\n                      />\n                    </Form.Group>\n                  </React.Fragment>\n                </Accordion.Collapse>\n              </Accordion>\n\n              {btnLoading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(CreateProfile);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/profile.action.js",[],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/post/comments/comments.js",["189","190"],"import Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport \"./comments.css\";\nimport { addComment, deleteComment } from \"../../../../actions/post.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Comments(props) {\n  const dispatch = useDispatch();\n  console.log(props);\n  const userid = useSelector((state) => {\n    return state.auth.AuthData._id;\n  });\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ comment: \"\" }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.comment) {\n            errors.comment = \"Required\";\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          dispatch(addComment(props.post_id, { body: values.comment }));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div className=\"row\">\n            <div className=\"col-12 comment-main rounded\">\n              <ul className=\"p-0\">\n                {props.comments &&\n                  props.comments.map((comment, index) => {\n                    return (\n                      <li key={index}>\n                        <div className=\"row comment-box p-1 pt-3 pr-4\">\n                          <div className=\"col-lg-2 col-3 user-img text-center\">\n                            <img\n                              src={`https://avatars.dicebear.com/api/male/${comment.user.username}.svg`}\n                              className=\"main-cmt-img\"\n                            />\n                          </div>\n                          <div className=\"col-lg-10 col-9 user-comment bg-light rounded pb-1\">\n                            <div className=\"row\">\n                              <div className=\"col-lg-8 col-6 border-bottom pr-0\">\n                                <p className=\"w-100 p-2 m-0\">\n                                  {!comment.body\n                                    ? \"Invalid Comment\"\n                                    : comment.body}\n                                </p>\n                              </div>\n                              <div className=\"col-lg-4 col-6 border-bottom\">\n                                <p className=\"w-100 p-2 m-0\">\n                                  <span className=\"float-right\">\n                                    <i\n                                      className=\"fa fa-clock-o mr-1\"\n                                      aria-hidden=\"true\"\n                                    />\n                                    {new Date(\n                                      comment.date\n                                    ).toLocaleDateString()}\n                                  </span>\n\n                                  {comment.user._id == userid && (\n                                    <span\n                                      onClick={() =>\n                                        dispatch(\n                                          deleteComment(props.post_id, {\n                                            comment_id: comment._id,\n                                          })\n                                        )\n                                      }\n                                      className=\"float-right mr-4\"\n                                      style={{ cursor: \"pointer\" }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    );\n                  })}\n\n                <hr />\n                <div className=\"row\">\n                  <form\n                    onSubmit={handleSubmit}\n                    style={{ width: \"100%\", color: \"white\" }}\n                  >\n                    <div className=\"col-lg-12 col-12\">\n                      <input\n                        name=\"comment\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Write Comments ...\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.comment}\n                      />\n                      {errors.comment && touched.comment && errors.comment}\n                    </div>\n                    <div className=\"col-lg-12 col-12 mt-4\">\n                      <Button type=\"submit\">Add Comment</Button>\n                    </div>\n                    {/* <button type=\"submit\" disabled={isSubmitting}>\n                      Submit\n                    </button> */}\n                  </form>\n                </div>\n              </ul>\n            </div>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Comments;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/alert.reducer.js",["191","192","193"],"const intialState = {\n  msg: \"\",\n  showAlert: false,\n  alertType: \"\",\n  loading: false,\n};\n\nconst AlertReducer = (state = intialState, action) => {\n  if (action.type == \"SHOW_ALERT\") {\n    return {\n      msg: action.payload.msg,\n      showAlert: true,\n      alertType: action.payload.alertType,\n    };\n  }\n  if (action.type == \"HIDE_ALERT\") {\n    return {\n      msg: \"\",\n      showAlert: false,\n      alertType: \"\",\n    };\n  }\n  if (action.type == \"SET_LOADING\") {\n    return {\n      ...state,\n      loading: action.payload,\n    };\n  }\n  return state;\n};\n\nexport default AlertReducer;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/alert.action.js",[],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/posts.js",["194","195","196"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPosts,\n  addLike,\n  removeLike,\n  deletePost,\n} from \"../../actions/post.action\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/esm/Spinner\";\n\nfunction Posts(props) {\n  const dispatch = useDispatch();\n\n  const posts = useSelector((state) => {\n    return state.post.posts;\n  });\n\n  const loading = useSelector((state) => {\n    return state.post.loading;\n  });\n\n  const userid = useSelector((state) => {\n    return state.auth.AuthData._id;\n  });\n\n  const isLiked = (arr) => {\n    return (\n      arr.filter((el) => {\n        return el.user == userid;\n      }).length > 0\n    );\n  };\n\n  React.useEffect(() => {\n    dispatch(getPosts());\n  }, []);\n\n  return (\n    <Container>\n      {!loading && (\n        <Button\n          variant=\"primary\"\n          className=\"mt-4\"\n          onClick={() => props.history.push(\"/add-post\")}\n        >\n          Add New\n        </Button>\n      )}\n      {!loading ? (\n        posts.map((post, index) => {\n          return (\n            <Row key={index}>\n              <Col>\n                <Card bg=\"dark\" text={\"white\"} className=\"mb-2 mt-4\">\n                  <Card.Body>\n                    <Card.Title>\n                      <Link\n                        style={{\n                          textDecoration: \"none\",\n                          color: \"white\",\n                          textTransform: \"capitalize\",\n                        }}\n                        to={\"post/\" + post._id}\n                      >\n                        {post.title}{\" \"}\n                      </Link>\n                    </Card.Title>\n                    <Card.Text>\n                     {post.body.substring(0,200)+\"...\"}\n                    </Card.Text>\n                    {/* {isLiked(post.like)} */}\n                    {!isLiked(post.like) ? (\n                      <Button\n                        onClick={() => {\n                          dispatch(addLike(post._id));\n                        }}\n                        variant=\"primary\"\n                      >\n                        Like&nbsp;\n                      </Button>\n                    ) : (\n                      <Button\n                        onClick={() => {\n                          dispatch(removeLike(post._id));\n                        }}\n                        variant=\"primary\"\n                      >\n                        Unlike&nbsp;\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"info\"\n                      className=\"mx-2\"\n                      onClick={() => props.history.push(\"/post/\" + post._id)}\n                    >\n                      Discussion\n                    </Button>\n                    {post.user && post.user._id == userid && (\n                      <Button\n                        onClick={() => dispatch(deletePost(post._id))}\n                        variant=\"danger\"\n                      >\n                        Delete\n                      </Button>\n                    )}\n                    <footer className=\"blockquote-footer mt-3\">\n                      <cite title=\"Source Title\">\n                        <Link\n                          style={{ textDecoration: \"none\", color: \"white\" }}\n                          to=\"/\"\n                        >\n                          {!post.user ? \"Invalid User\" : post.user.username}\n                        </Link>\n                      </cite>\n                    </footer>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          );\n        })\n      ) : (\n        <Spinner\n          style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n          animation=\"grow\"\n          variant=\"primary\"\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default withRouter(Posts);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/auth/signup/signup.js",["197","198","199"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport MyAlerts from \"../../alert/alert\";\nimport axios from \"axios\";\nimport { SignupUser } from \"../../../actions/auth.action\";\nimport { Redirect } from \"react-router\";\n\nfunction Signup() {\n  const [loading, setloading] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const showAlert = useSelector((state) => {\n    return state.alert.showAlert;\n  });\n  const isAuth = useSelector((state) => {\n    return state.auth.isAuth;\n  });\n  if (isAuth) {\n    return <Redirect to=\"/dashboard\"></Redirect>;\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ username: \"\", email: \"\", password: \"\" }}\n        validate={(values) => {\n          const errors = {};\n\n          if (!values.username) {\n            errors.username = \"Required\";\n          }\n\n          if (!values.password) {\n            errors.password = \"Required\";\n          } else if (values.password.length <= 5) {\n            errors.password = \"Password Length Must be greater then 5\";\n          }\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setloading(true);\n          const data = {\n            username: values.username,\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(SignupUser(data));\n\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            <Form className=\"login\" onSubmit={handleSubmit}>\n              {showAlert && <MyAlerts />}\n\n              <Form.Group controlId=\"formBasicUsername\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"Enter username\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.username}\n                />\n                {errors.username && touched.username && errors.username}\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                {errors.email && touched.email && errors.email}\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                {errors.password && touched.password && errors.password}\n              </Form.Group>\n              {loading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Sign up\n                </Button>\n              )}\n            </Form>\n            {/* <form onSubmit={handleSubmit}>\n              <input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && errors.email}\n\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && errors.password}\n              <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form> */}\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Signup;\n",["200","201"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/editProfile/edit_profile.js",["202","203","204","205","206","207","208","209","210"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Formik, Field } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { login } from \"../../../actions/auth.action\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport {\n  createProfile,\n  getCurrentProfile,\n} from \"../../../actions/profile.action\";\n\nfunction EditProfile(props) {\n  const dispatch = useDispatch();\n\n  const btnLoading = useSelector((state) => {\n    return state.profile.btnLoading;\n  });\n\n  const profile = useSelector((state) => {\n    return state.profile.profile;\n  });\n\n  const loading = useSelector((state) => {\n    return state.profile.profileLoading;\n  });\n  console.log(profile);\n  React.useEffect(() => {\n    dispatch(getCurrentProfile());\n  }, []);\n\n  let dataToDisplay = !loading ? (\n    <div className=\"login\">\n      <Formik\n        initialValues={{\n          status: \"developer\",\n          company: profile.company,\n          website: profile.website,\n          location: profile.location,\n          skills: profile.skills.join(\",\"),\n          bio: profile.bio,\n          githubusername: profile.githubusername,\n\n          facebook: profile.social.facebook,\n          twitter: profile.social.twitter,\n          instagram: \"\",\n        }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.status) {\n            errors.status = \"Required\";\n          }\n\n          if (!values.company) {\n            errors.company = \"Required\";\n          }\n          if (!values.website) {\n            errors.website = \"Required\";\n          }\n          if (!values.location) {\n            errors.location = \"Required\";\n          }\n          if (!values.skills) {\n            errors.skills = \"Required\";\n          }\n          if (!values.bio) {\n            errors.bio = \"Required\";\n          }\n          if (!values.bio) {\n            errors.githubusername = \"Required\";\n          }\n\n          //   if (!values.password) {\n          //     errors.password = \"Required\";\n          //   }\n\n          //   if (!values.email) {\n          //     errors.email = \"Required\";\n          //   } else if (\n          //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          //   ) {\n          //     errors.email = \"Invalid email address\";\n          //   }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          dispatch(createProfile(values, true, props));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            <Form onSubmit={handleSubmit}>\n              <h1><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> <b>Edit Profile</b></h1>\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Select Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"status\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                >\n                  <option value=\"developer\">Developer</option>\n                  <option value=\"teacher\">Teacher</option>\n                  <option value=\"student\">Student</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Company</Form.Label>\n                <Form.Control\n                  name=\"company\"\n                  type=\"text\"\n                  placeholder=\"Company Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.company}\n                  isInvalid={!!errors.company}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.company}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"website\">\n                <Form.Label>Website</Form.Label>\n                <Form.Control\n                  name=\"website\"\n                  type=\"text\"\n                  placeholder=\"Website\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.website}\n                  isInvalid={!!errors.website}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.website}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"location\">\n                <Form.Label>Location</Form.Label>\n                <Form.Control\n                  name=\"location\"\n                  type=\"text\"\n                  placeholder=\"Location\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.location}\n                  isInvalid={!!errors.location}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.location}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"skills\">\n                <Form.Label>Skills</Form.Label>\n                <Form.Control\n                  name=\"skills\"\n                  type=\"text\"\n                  placeholder=\"Skills\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.skills}\n                  isInvalid={!!errors.skills}\n                />\n                <Form.Text className=\"text-muted\">\n                  Please use comma seprated values (eg, HTML,CSS,PHP).\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.skills}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"githubusername\">\n                <Form.Label>Github username</Form.Label>\n                <Form.Control\n                  name=\"githubusername\"\n                  type=\"text\"\n                  placeholder=\"Github username\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.githubusername}\n                  isInvalid={!!errors.githubusername}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.githubusername}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"bio\">\n                <Form.Label>Bio</Form.Label>\n                <Form.Control\n                  name=\"bio\"\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"A Short Bio of yourself\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.bio}\n                  isInvalid={!!errors.bio}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.bio}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Accordion defaultActiveKey=\"0\" style={{ marginBottom: \"20px\" }}>\n                <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"1\">\n                  <i className=\"fa fa-share-square\" aria-hidden=\"true\"></i> Add\n                  Social Network Link\n                </Accordion.Toggle>\n\n                <Accordion.Collapse eventKey=\"1\" style={{ marginTop: \"20px\" }}>\n                  <React.Fragment>\n                    <Form.Group controlId=\"twitter\">\n                      <Form.Control\n                        name=\"twitter\"\n                        type=\"text\"\n                        placeholder=\"Twitter\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.twitter}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"facebook\">\n                      <Form.Control\n                        name=\"facebook\"\n                        type=\"text\"\n                        placeholder=\"Facebook\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.facebook}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"instagram\">\n                      <Form.Control\n                        name=\"instagram\"\n                        type=\"text\"\n                        placeholder=\"Instagram\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.instagram}\n                      />\n                    </Form.Group>\n                  </React.Fragment>\n                </Accordion.Collapse>\n              </Accordion>\n\n              {btnLoading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Update\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  ) : (\n    \"Loading...\"\n  );\n\n  return dataToDisplay;\n}\n\nexport default withRouter(EditProfile);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/DashboardList/EducationList/EducationList.js",["211"],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/index.js",[],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/auth.reducer.js",["212","213","214","215","216"],"const intialState = { isAuth: false, AuthData: {} };\n\nconst Auth = (state = intialState, action) => {\n  if (action.type == \"LOGIN\") {\n    localStorage.setItem(\"token\", action.payload);\n    return {\n      ...state,\n      isAuth: true,\n      AuthData: action.payload,\n      loading: false,\n    };\n  }\n\n  //   if (action.type == \"LOAD_USER_START\") {\n  //     return {\n  //       ...state,\n  //       loading: true,\n  //     };\n  //   }\n\n  if (action.type == \"LOAD_USER\") {\n    return {\n      ...state,\n      isAuth: true,\n      AuthData: action.payload,\n    };\n  }\n\n  //   if (action.type == \"LOAD_USER_COMPLETE\") {\n  //     return {\n  //       ...state,\n  //       loading: false,\n  //     };\n  //   }\n\n  if (action.type == \"LOAD_USER_FAILED\") {\n    localStorage.removeItem(\"token\");\n    return {\n      ...state,\n      isAuth: false,\n      AuthData: \"\",\n    };\n  }\n\n  if (action.type == \"SIGNUP_SUCCESS\") {\n    localStorage.setItem(\"token\", action.payload);\n    return {\n      ...state,\n      isAuth: true,\n      AuthData: action.payload,\n      loading: false,\n    };\n  }\n\n  if (action.type == \"LOGOUT\") {\n    localStorage.removeItem(\"token\");\n    return {\n      ...state,\n      isAuth: false,\n      AuthData: \"\",\n    };\n  }\n  return state;\n};\n\nexport default Auth;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/profile.reducer.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"const intialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  error: {},\n  loading: true,\n  btnLoading: false,\n  deleteButtons: [],\n  profileLoading: true,\n};\n\nconst ProfileReducer = (state = intialState, action) => {\n  if (action.type == \"GET_PROFILES\") {\n    return {\n      ...state,\n      profiles: action.payload,\n      loading: false,\n    };\n  }\n\n  if (action.type == \"GET_PROFILE_START\") {\n    return {\n      ...state,\n      profileLoading: true,\n    };\n  }\n  if (action.type == \"GET_PROFILE\") {\n    return {\n      ...state,\n      profile: action.payload,\n      loading: false,\n      profileLoading: false,\n    };\n  }\n  if (action.type == \"GET_PROFILE_FAILED\") {\n    return {\n      ...state,\n      profile: null,\n      loading: false,\n    };\n  }\n\n  if (action.type == \"START_CREATE_PROFILE\") {\n    console.log(action.payload);\n    return {\n      ...state,\n      btnLoading: true,\n    };\n  }\n\n  if (action.type == \"CREATE_PROFILE\") {\n    console.log(action.payload);\n    return {\n      ...state,\n      profile: action.payload,\n      btnLoading: false,\n    };\n  }\n\n  if (action.type == \"ADD_EXPERIENCE_START\") {\n    return {\n      ...state,\n      btnLoading: true,\n    };\n  }\n\n  if (action.type == \"ADD_EXPERIENCE\") {\n    console.log(action.payload);\n    return {\n      ...state,\n      profile: action.payload,\n      btnLoading: false,\n    };\n  }\n\n  if (action.type == \"ADD_EDUCATION_START\") {\n    return {\n      ...state,\n      btnLoading: true,\n    };\n  }\n\n  if (action.type == \"ADD_EDUCATION\") {\n    console.log(action.payload);\n    return {\n      ...state,\n      profile: action.payload,\n      btnLoading: false,\n    };\n  }\n\n  if (action.type == \"ADD_EDUCATION_FAILED\") {\n    return {\n      ...state,\n      btnLoading: false,\n    };\n  }\n\n  if (action.type == \"DELETE_EDUCATION_START\") {\n    return {\n      ...state,\n      deleteButtons: [...state.deleteButtons, action.payload],\n    };\n  }\n\n  if (action.type == \"DELETE_EDUCATION\") {\n    // console.log(state.deleteButtons);\n    // console.log(action.payload);\n    return {\n      ...state,\n      profile: action.payload.data,\n      btnLoading: false,\n      deleteButtons: state.deleteButtons.filter(\n        (el) => action.payload.edu_id != el\n      ),\n    };\n  }\n\n  if (action.type == \"DELETE_EXPERIENCE_START\") {\n    return {\n      ...state,\n      deleteButtons: [...state.deleteButtons, action.payload],\n    };\n  }\n\n  if (action.type == \"DELETE_EXPERIENCE\") {\n    // console.log(state.deleteButtons);\n    // console.log(action.payload);\n    return {\n      ...state,\n      profile: action.payload.data,\n      btnLoading: false,\n      deleteButtons: state.deleteButtons.filter(\n        (el) => action.payload.exp_id != el\n      ),\n    };\n  }\n\n  if (action.type == \"GET_REPOS\") {\n    return {\n      ...state,\n      repos: action.payload,\n    };\n  }\n\n  if (action.type == \"CLEAR_PROFILE\") {\n    return {\n      ...state,\n      profile: \"\",\n      loading: true,\n      repos: [],\n      profileLoading: true,\n    };\n  }\n\n  return state;\n};\n\nexport default ProfileReducer;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/routing/privatroute.js",["236"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRouter = ({ component: Component, ...rest }) => {\n  //   let isAuth = useSelector((state) => {\n  //     return state.auth.isAuth;\n  //   });\n\n  let isAuth = localStorage.getItem(\"token\");\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuth ? (\n          <Redirect to=\"/login\"></Redirect>\n        ) : (\n          <Component {...props}></Component>\n        )\n      }\n    ></Route>\n  );\n};\n\nexport default PrivateRouter;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/posts/addPost/AddPost.js",["237","238","239"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { addPost } from \"../../../actions/post.action\";\n\nfunction AddPost(props) {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => {\n    return state.post.btnLoading;\n  });\n  return (\n    <div className=\"login\">\n      <Formik\n        initialValues={{ title: \"\", body: \"\" }}\n        validate={(values) => {\n          const errors = {};\n\n          if (!values.title) {\n            errors.title = \"Required\";\n          }\n          if (!values.body) {\n            errors.body = \"Required\";\n          }\n\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n          dispatch(addPost(values, props));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            {showAlert && <MyAlerts />}\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Post Title\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.title}\n                />\n\n                {errors.title && touched.title && errors.title}\n              </Form.Group>\n              <Form.Group controlId=\"bio\">\n                <Form.Label>Body</Form.Label>\n                <Form.Control\n                  name=\"body\"\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Post Body\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.body}\n                  isInvalid={!!errors.body}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.body && touched.body && errors.body}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {loading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Add Post\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(AddPost);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/profiles/profile/profile.js",["240","241","242","243","244"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport {\n  getProfileById,\n  getGithubRepos,\n} from \"../../../actions/profile.action\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Profile(props) {\n  const dispatch = useDispatch();\n  const profile = useSelector((state) => {\n    return state.profile.profile;\n  });\n\n  const repos = useSelector((state) => {\n    return state.profile.repos;\n  });\n\n  const authData = useSelector((state) => {\n    return state.auth.AuthData;\n  });\n\n  const loading = useSelector((state) => {\n    return state.profile.profileLoading;\n  });\n  const style = {\n    border: \"1px solid\",\n  };\n\n  React.useEffect(() => {\n    // console.log(props.match.params);\n    dispatch(getProfileById(props.match.params.id));\n  }, []);\n\n  return (\n    <div>\n      <Container>\n        {!loading ? (\n          <React.Fragment>\n            <Row className=\"mt-5\">\n              <Col lg={12} sm={12} xs={12}>\n                <Card\n                  className=\"text-center\"\n                  bg=\"dark\"\n                  text=\"white\"\n                  style={style}\n                >\n                  <Card.Img\n                    variant=\"top\"\n                    src={`https://avatars.dicebear.com/api/male/${profile.user.username}.svg`}\n                    style={{ width: \"20%\" }}\n                    className=\"mx-auto mt-2\"\n                  />\n                  <Card.Body>\n                    <Card.Title>{profile.user.username}</Card.Title>\n                    <Card.Text>{profile.status}</Card.Text>\n                    <Card.Text>\n                      <i className=\"fa fa-map\" aria-hidden=\"true\"></i>{\" \"}\n                      {profile.location}\n                    </Card.Text>\n                    <div>\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => window.open(\"https://google.com\")}\n                      >\n                        {\" \"}\n                        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      </Button>{\" \"}\n                      <Button variant=\"info\">\n                        {\" \"}\n                        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                      </Button>{\" \"}\n                      <Button\n                        variant=\"secondary\"\n                        onClick={() =>\n                          window.open(\n                            `https://github.com/${profile.githubusername}`\n                          )\n                        }\n                      >\n                        {\" \"}\n                        <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      </Button>{\" \"}\n                      {profile.user._id == authData._id && (\n                        <Button\n                          onClick={() => props.history.push(\"/edit-profile\")}\n                          variant=\"primary\"\n                        >\n                          Edit Profile\n                        </Button>\n                      )}\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n            <Row className=\"mt-5\">\n              <Col lg={12} sm={12} xs={12}>\n                <Card\n                  className=\"text-center\"\n                  bg=\"dark\"\n                  text=\"white\"\n                  style={style}\n                >\n                  <Card.Body>\n                    <Card.Title>{profile.user.username} Bio</Card.Title>\n                    <Card.Text>{profile.bio}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n              <Col lg={12} sm={12} xs={12}>\n                <Card\n                  className=\"text-center\"\n                  bg=\"dark\"\n                  text=\"white\"\n                  style={style}\n                >\n                  <Card.Body>\n                    <Card.Title>Skill Set</Card.Title>\n                    <Card.Text>\n                      {profile.skills.map((el, index) => {\n                        return (\n                          <span key={index}>\n                            &nbsp;&nbsp;&nbsp;\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                            &nbsp;\n                            {el}\n                          </span>\n                        );\n                      })}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n              <Col lg={6} sm={12} xs={12}>\n                <Card\n                  className=\"text-center\"\n                  bg=\"dark\"\n                  text=\"white\"\n                  style={style}\n                >\n                  <Card.Body>\n                    <Card.Title>Experience</Card.Title>\n                    <Card.Text>\n                      {profile.experience.length == 0\n                        ? \"No Experience\"\n                        : profile.experience.map((el, index) => {\n                            return (\n                              <React.Fragment key={index}>\n                                <b> {el.company}</b>\n                                <br></br>\n                                {new Date(el.from).toLocaleDateString() +\n                                  \" - \" +\n                                  (el.to\n                                    ? new Date(el.to).toLocaleDateString()\n                                    : \"Now\")}\n                                <br></br>\n                                <b>Position: </b>\n                                {el.title}\n                                <br></br>\n                                <br></br>\n                              </React.Fragment>\n                            );\n                          })}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col lg={6} sm={12} xs={12}>\n                <Card\n                  className=\"text-center\"\n                  bg=\"dark\"\n                  text=\"white\"\n                  style={style}\n                >\n                  <Card.Body>\n                    <Card.Title>Education</Card.Title>\n                    <Card.Text>\n                      {profile.education.length == 0\n                        ? \" No Education\"\n                        : profile.education.map((el, index) => {\n                            return (\n                              <React.Fragment key={index}>\n                                {el.education}\n                                <br></br>\n                                <b>Degree: </b>\n                                {el.course}\n                                <br></br>\n                                <b>Field of Study: </b>\n                                {el.specialization}\n                                <br></br>\n                                <b>University/Institute: </b>\n                                {el.university}\n                                <br></br>\n                                <b>Passing Year: </b>\n                                {el.passing_year}\n                                <br></br>\n                                <br></br>\n                              </React.Fragment>\n                            );\n                          })}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n            {profile.githubusername && (\n              <Row className=\"mt-5 mb-5\">\n                <Col lg={12} sm={12} xs={12}>\n                  <Card\n                    className=\"text-center\"\n                    bg=\"dark\"\n                    text=\"white\"\n                    style={style}\n                  >\n                    <Card.Body>\n                      <Card.Title>Github Repos</Card.Title>\n                      <Card.Text>\n                        {repos.map((el, index) => {\n                          return (\n                            <span key={index}>\n                              &nbsp;&nbsp;&nbsp;\n                              <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                              &nbsp;\n                              {el.name}\n                            </span>\n                          );\n                        })}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            )}\n          </React.Fragment>\n        ) : (\n          <Spinner\n            style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n            variant=\"primary\"\n            animation=\"grow\"\n          />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default withRouter(Profile);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/DashboardList/ExperienceList/ExperienceList.js",["245"],"import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport { DeleteExperience } from \"../../../../actions/profile.action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction ExperienceList({ experiences }) {\n  const style = {\n    textTransform: \"capitalize\",\n    textAlign: \"center\",\n  };\n\n  const dispatch = useDispatch();\n\n  const deleteButtons = useSelector((state) => {\n    return state.profile.deleteButtons;\n  });\n\n  return (\n    <React.Fragment>\n      <h4 style={{ marginTop: \"20px\" }}>\n        <b>Experience Credentials</b>\n      </h4>\n\n      {experiences.length != 0 ? (\n        <Table striped bordered hover variant=\"dark\" responsive style={style}>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Company</th>\n              <th>Title</th>\n              <th>Years</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {experiences.map(\n              ({ company, title, current, from, to, _id }, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{company}</td>\n                    <td>{title}</td>\n                    <td>\n                      {new Date(from).toLocaleDateString() +\n                        \" - \" +\n                        (current ? \"Now\" : new Date(to).toLocaleDateString())}\n                    </td>\n                    <td>\n                      {deleteButtons.includes(_id) ? (\n                        <Button variant=\"danger\" disabled>\n                          <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => dispatch(DeleteExperience(_id))}\n                        >\n                          Delete\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                );\n              }\n            )}\n          </tbody>\n        </Table>\n      ) : (\n        \"There is no Experience Credentials\"\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ExperienceList;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/reducers/post.reducer.js",["246","247","248","249","250","251","252","253","254","255","256","257","258"],"const intialState = {\n  posts: [],\n  post: \"\",\n  loading: true,\n  btnLoading: false,\n};\n\nconst PostReducer = (state = intialState, action) => {\n  if (action.type == \"GET_POSTS\") {\n    return {\n      ...state,\n      posts: action.payload,\n      loading: false,\n    };\n  }\n\n  if (action.type == \"ADD_POST_START\") {\n    return {\n      ...state,\n      btnLoading: true,\n    };\n  }\n\n  if (action.type == \"ADD_POST\") {\n    let posts = [...state.posts];\n    posts.unshift(action.payload);\n    return {\n      ...state,\n      posts: posts,\n      btnLoading: false,\n    };\n  }\n\n  if (action.type == \"POST_DELETE\") {\n    let posts = [...state.posts];\n    let updatedPost = posts.filter((post) => {\n      return post._id != action.payload;\n    });\n    return {\n      ...state,\n      posts: updatedPost,\n    };\n  }\n\n  if (action.type == \"POST_LIKE\") {\n    // let posts = [...state.posts];\n    // let index = posts.findIndex((post) => post._id == action.payload.post_id);\n    // posts[index].like = action.payload.like;\n\n    return {\n      ...state,\n      posts: state.posts.map((post) =>\n        post._id == action.payload.post_id\n          ? { ...post, like: action.payload.like }\n          : post\n      ),\n      //   posts: action.payload,\n    };\n  }\n\n  if (action.type == \"POST_UNLIKE\") {\n    console.log(action.payload);\n    return {\n      ...state,\n      //   posts: action.payload,\n      posts: state.posts.map((post) =>\n        post._id == action.payload.post_id\n          ? { ...post, like: action.payload.like }\n          : post\n      ),\n    };\n  }\n\n  if (action.type == \"GET_SINGLE_POST\") {\n    return {\n      ...state,\n      post: action.payload,\n      loading: false,\n    };\n  }\n\n  if (action.type == \"CLEAR_POST\") {\n    return {\n      ...state,\n      post: \"\",\n      loading: true,\n    };\n  }\n\n  if (action.type == \"ADD_COMMENT\") {\n    return {\n      ...state,\n      post: { ...state.post, comments: action.payload },\n    };\n  }\n\n  if (action.type == \"DELETE_COMMENT\") {\n    return {\n      ...state,\n      post: { ...state.post, comments: action.payload },\n    };\n  }\n  return state;\n};\n\nexport default PostReducer;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/auth.action.js",["259"],"import axios from \"axios\";\nimport { showAlert, setloading } from \"./alert.action\";\nimport { useHistory } from \"react-router-dom\";\nimport setAuthToken from \"./setAuthToken\";\n\nexport const login = (data, ownProps) => {\n  return function (dispatch) {\n    dispatch(setloading(true));\n    console.log(\"/api/auth\");\n    axios\n      .post(\"/api/auth\", data)\n      .then((res) => {\n        // dispatch(showAlert({ msg: \"Logged In\", alertType: \"success\" }));\n        //   props.history.push(\"/dashboard\");\n        dispatch(setloading(false));\n        dispatch({ type: \"LOGIN\", payload: res.data.token });\n        dispatch(loadUser());\n        // ownProps.history.push(\"/dashboard\");\n      })\n      .catch((error) => {\n        dispatch(\n          showAlert({\n            msg: \"Invalid Username Or Password\",\n            alertType: \"danger\",\n          })\n        );\n        dispatch(setloading(false));\n      });\n  };\n};\n\nexport const SignupUser = (data) => {\n  return function (dispatch) {\n    axios\n      .post(\"/api/users\", data)\n      .then((res) => {\n        console.log(res);\n        dispatch({ type: \"SIGNUP_SUCCESS\", payload: res.data.token });\n        dispatch(showAlert({ msg: \"Successfully\", alertType: \"success\" }));\n        dispatch(loadUser());\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        dispatch(\n          showAlert({ msg: error.response.data.error, alertType: \"danger\" })\n        );\n      });\n  };\n};\n\nexport const loadUser = (data, props) => {\n  return function (dispatch) {\n    // dispatch({ type: \"LOAD_USER_START\" });\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setAuthToken(token);\n    }\n\n    axios\n      .get(\"/api/auth\")\n      .then((res) => {\n        console.log(res);\n        dispatch({ type: \"LOAD_USER\", payload: res.data });\n        // dispatch({ type: \"LOAD_USER_COMPLETE\" });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        dispatch({ type: \"LOAD_USER_FAILED\" });\n      });\n  };\n};\n\n// export const clearProfile = () => {\n//   return function (dispatch) {\n//     dispatch({ type: \"CLEAR_PROFILE\" });\n//   };\n// };\n\nexport const logout = () => {\n  return function (dispatch) {\n    dispatch({ type: \"LOGOUT\" });\n    dispatch({ type: \"CLEAR_PROFILE\" });\n  };\n};\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/navbar/navbar.js",["260","261","262"],"import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./navbar.css\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth.action\";\n\nfunction MyNavbar() {\n  const [expanded, setExpanded] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const Auth = useSelector((state) => {\n    return state.auth;\n  });\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Dev Connector</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"1\" as={Link} to=\"/profiles\">\n              Developers\n            </Nav.Link>\n          </Nav.Item>\n\n          {!Auth.isAuth ? (\n            <React.Fragment>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\" as={Link} to=\"/login\">\n                  Login\n                </Nav.Link>\n              </Nav.Item>\n\n              <Nav.Item>\n                <Nav.Link eventKey=\"3\" as={Link} to=\"/signup\">\n                  Sign Up\n                </Nav.Link>\n              </Nav.Item>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Nav.Item>\n                <Nav.Link eventKey=\"4\" as={Link} to=\"/dashboard\">\n                  Dashboard\n                </Nav.Link>\n              </Nav.Item>\n\n              <Nav.Item>\n                <Nav.Link eventKey=\"5\" as={Link} to=\"/posts\">\n                  Post\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"6\" onClick={onLogout} as={Link} to=\"/login\">\n                  Logout\n                </Nav.Link>\n              </Nav.Item>\n            </React.Fragment>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    // <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\">\n    //   <Navbar.Brand href=\"#home\">Dev Connector</Navbar.Brand>\n    //   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    //   <Navbar.Collapse id=\"basic-navbar-nav\">\n    //     <Nav className=\"ml-auto\">\n    //       <Nav.Link as={Link} to=\"/profiles\">\n    //         Developers\n    //       </Nav.Link>\n    //       {!Auth.isAuth ? (\n    //         <React.Fragment>\n    //           <Nav.Link as={Link} to=\"/login\">\n    //             Login\n    //           </Nav.Link>\n    //           <Nav.Link as={Link} to=\"/signup\">\n    //             Signup\n    //           </Nav.Link>\n    //         </React.Fragment>\n    //       ) : (\n    //         <React.Fragment>\n    //           <Nav.Link as={Link} to=\"/dashboard\">\n    //             Home\n    //           </Nav.Link>\n    //           <Nav.Link as={Link} to=\"/posts\">\n    //             Posts\n    //           </Nav.Link>\n    //           <Nav.Link as={Link} onClick={onLogout} to=\"/login\">\n    //             Logout\n    //           </Nav.Link>\n    //         </React.Fragment>\n    //       )}\n    //     </Nav>\n    //   </Navbar.Collapse>\n    // </Navbar>\n  );\n}\nexport default MyNavbar;\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/profiles/profiles.js",["263"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProfiles } from \"../../actions/profile.action\";\nimport { withRouter } from \"react-router\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Profiles(props) {\n  const style = {\n    border: \"1px solid\",\n  };\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => {\n    return state.profile.loading;\n  });\n\n  React.useLayoutEffect(() => {\n    dispatch({ type: \"CLEAR_PROFILE\" });\n  }, []);\n\n  React.useEffect(() => {\n    dispatch(getProfiles());\n  }, [dispatch]);\n\n  const profiles = useSelector((state) => {\n    return state.profile.profiles;\n  });\n\n  return (\n    <div>\n      <Container>\n        {/* <h1 className = \"text-white\">Developers</h1> */}\n        {!loading ? (\n          profiles.map(\n            (\n              { bio, status, location, skills, user: { username, _id } },\n              index\n            ) => {\n              return (\n                <Row className=\"mt-5\" key={index}>\n                  <Col lg={12} sm={12} xs={12}>\n                    <Card\n                      className=\"text-center\"\n                      bg=\"dark\"\n                      text=\"white\"\n                      style={style}\n                    >\n                      <Card.Header>{username}</Card.Header>\n                      <Card.Body>\n                        <Card.Title>\n                          <i\n                            className=\"fa fa-map-marker\"\n                            aria-hidden=\"true\"\n                          ></i>{\" \"}\n                          {status}\n                        </Card.Title>\n                        <Card.Text>\n                          <i\n                            className=\"fa fa-map-marker\"\n                            aria-hidden=\"true\"\n                          ></i>{\" \"}\n                          {location}\n                        </Card.Text>\n                        <Button\n                          onClick={() => props.history.push(\"/profile/\" + _id)}\n                          variant=\"primary\"\n                        >\n                          View Profile\n                        </Button>\n                      </Card.Body>\n                      <Card.Footer className=\"text-muted\">\n                        Skills: {skills.reduce((str, el) => str + \", \" + el)}\n                      </Card.Footer>\n                    </Card>\n                  </Col>\n                </Row>\n              );\n            }\n          )\n        ) : (\n          <Spinner\n            style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n            variant=\"primary\"\n            animation=\"grow\"\n          />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default withRouter(Profiles);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/actions/post.action.js",[],"/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/addEducation/addEducaton.js",["264","265","266","267","268","269","270","271","272","273","274"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Formik, Field } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { login } from \"../../../actions/auth.action\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { Addeducation } from \"../../../actions/profile.action\";\n\nfunction AddEducation(props) {\n  const [disable, setDisable] = React.useState(false);\n\n  const btnLoading = useSelector((state) => {\n    return state.profile.btnLoading;\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"login\">\n      <Formik\n        initialValues={{\n          education: \"Doctorate/PhD\",\n          course: \"\",\n          specialization: \"\",\n          university: \"\",\n          passing_year: \"\",\n        }}\n        validate={(values) => {\n          const errors = {};\n\n          //   if (!values.password) {\n          //     errors.password = \"Required\";\n          //   }\n\n          //   if (!values.email) {\n          //     errors.email = \"Required\";\n          //   } else if (\n          //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          //   ) {\n          //     errors.email = \"Invalid email address\";\n          //   }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          console.log(values);\n          dispatch(Addeducation(values, props));\n\n          //   resetForm();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n            <Form onSubmit={handleSubmit}>\n              <h1>\n                <b>Add Education</b>\n              </h1>\n              <Form.Group controlId=\"education\">\n                <Form.Label>Education</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"education\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.education}\n                >\n                  <option value=\"Doctorate/PhD\">Doctorate/PhD</option>\n                  <option value=\"Master/Post-Graduation\">\n                    Master/Post-Graduation\n                  </option>\n                  <option value=\"Graduation/Diploma\">Graduation/Diploma</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"course\">\n                <Form.Label>Course</Form.Label>\n                <Form.Control\n                  name=\"course\"\n                  type=\"text\"\n                  placeholder=\"Course\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.course}\n                  isInvalid={!!errors.course}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.course}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"specialization\">\n                <Form.Label>Specialization</Form.Label>\n                <Form.Control\n                  name=\"specialization\"\n                  type=\"text\"\n                  placeholder=\"Specialization\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.specialization}\n                  isInvalid={!!errors.specialization}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.specialization}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"University/Institute\">\n                <Form.Label>University/Institute</Form.Label>\n                <Form.Control\n                  name=\"university\"\n                  type=\"text\"\n                  placeholder=\"University/Institute\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.university}\n                  isInvalid={!!errors.university}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.university}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"passing_year\">\n                <Form.Label>Passing Year</Form.Label>\n                <Form.Control\n                  name=\"passing_year\"\n                  type=\"text\"\n                  placeholder=\"Passing Year\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.passing_year}\n                  isInvalid={!!errors.passing_year}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.passing_year}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {btnLoading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(AddEducation);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/dashboard/addExperience/add_experience.js",["275","276","277","278","279","280","281","282","283","284"],"import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Formik, Field } from \"formik\";\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyAlerts from \"../../alert/alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { showAlert, hideAlert } from \"../../../actions/alert.action\";\nimport { login } from \"../../../actions/auth.action\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { Addexperience } from \"../../../actions/profile.action\";\n\nfunction AddExperience(props) {\n  const [disable, setDisable] = React.useState(false);\n\n  const btnLoading = useSelector((state) => {\n    return state.profile.btnLoading;\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"login\">\n      <Formik\n        initialValues={{\n          title: \"\",\n          company: \"\",\n          location: \"\",\n          from: \"\",\n          to: \"\",\n          current: \"no\",\n        }}\n        validate={(values) => {\n          const errors = {};\n\n          if (!values.company) {\n            errors.company = \"Required\";\n          }\n          if (!values.title) {\n            errors.title = \"Required\";\n          }\n\n          if (!values.location) {\n            errors.location = \"Required\";\n          }\n          if (!values.from) {\n            errors.from = \"Required\";\n          }\n\n          if (!values.to && !disable) {\n            errors.to = \"Required\";\n          }\n\n          if (values.current) {\n            if (values.current == \"yes\") {\n              setDisable(true);\n            } else {\n              setDisable(false);\n            }\n          }\n\n          //   if (!values.password) {\n          //     errors.password = \"Required\";\n          //   }\n\n          //   if (!values.email) {\n          //     errors.email = \"Required\";\n          //   } else if (\n          //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          //   ) {\n          //     errors.email = \"Invalid email address\";\n          //   }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          console.log(values);\n          dispatch(Addexperience(values, props));\n        //   resetForm();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <div>\n              <h1><b><i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Add Experience</b></h1>\n            <Form onSubmit={handleSubmit}>\n            \n              {/* <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Select Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"status\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                >\n                  <option value=\"developer\">Developer</option>\n                  <option value=\"teacher\">Teacher</option>\n                  <option value=\"student\">Student</option>\n                </Form.Control>\n              </Form.Group> */}\n\n              <Form.Group controlId=\"website\">\n                <Form.Label>Job Title</Form.Label>\n                <Form.Control\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.title}\n                  isInvalid={!!errors.title}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.title}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Company</Form.Label>\n                <Form.Control\n                  name=\"company\"\n                  type=\"text\"\n                  placeholder=\"Company Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.company}\n                  isInvalid={!!errors.company}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.company}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"location\">\n                <Form.Label>Location</Form.Label>\n                <Form.Control\n                  name=\"location\"\n                  type=\"text\"\n                  placeholder=\"Location\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.location}\n                  isInvalid={!!errors.location}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.location}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"from\">\n                <Form.Label>From</Form.Label>\n                <Form.Control\n                  name=\"from\"\n                  type=\"date\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.from}\n                  isInvalid={!!errors.from}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.from}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Current</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"current\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.current}\n                >\n                  <option value=\"yes\">Yes</option>\n                  <option value=\"no\">No</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"to\">\n                <Form.Label>To</Form.Label>\n                <Form.Control\n                  name=\"to\"\n                  type=\"date\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.to}\n                  isInvalid={!!errors.to}\n                  disabled={disable}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.to}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {btnLoading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              )}\n            </Form>\n          </div>\n\n          //  <form onSubmit={handleSubmit}>\n          //    <input\n          //      type=\"email\"\n          //      name=\"email\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.email}\n          //    />\n          //    {errors.email && touched.email && errors.email}\n          //    <input\n          //      type=\"password\"\n          //      name=\"password\"\n          //      onChange={handleChange}\n          //      onBlur={handleBlur}\n          //      value={values.password}\n          //    />\n          //    {errors.password && touched.password && errors.password}\n          //    <button type=\"submit\" disabled={isSubmitting}>\n          //      Submit\n          //    </button>\n          //  </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(AddExperience);\n","/home/himanshu/Desktop/reactApps/devconnector2/backend/frontend/src/components/alert/alert.js",[],{"ruleId":"285","severity":1,"message":"286","line":6,"column":17,"nodeType":"287","messageId":"288","endLine":6,"endColumn":23},{"ruleId":"285","severity":1,"message":"289","line":6,"column":25,"nodeType":"287","messageId":"288","endLine":6,"endColumn":33},{"ruleId":"285","severity":1,"message":"290","line":10,"column":8,"nodeType":"287","messageId":"288","endLine":10,"endColumn":12},{"ruleId":"285","severity":1,"message":"291","line":11,"column":10,"nodeType":"287","messageId":"288","endLine":11,"endColumn":18},{"ruleId":"285","severity":1,"message":"292","line":25,"column":9,"nodeType":"287","messageId":"288","endLine":25,"endColumn":17},{"ruleId":"285","severity":1,"message":"293","line":27,"column":9,"nodeType":"287","messageId":"288","endLine":27,"endColumn":15},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"294","replacedBy":"298"},{"ruleId":"296","replacedBy":"299"},{"ruleId":"285","severity":1,"message":"300","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":21},{"ruleId":"285","severity":1,"message":"289","line":9,"column":10,"nodeType":"287","messageId":"288","endLine":9,"endColumn":18},{"ruleId":"285","severity":1,"message":"301","line":15,"column":9,"nodeType":"287","messageId":"288","endLine":15,"endColumn":17},{"ruleId":"285","severity":1,"message":"293","line":40,"column":9,"nodeType":"287","messageId":"288","endLine":40,"endColumn":15},{"ruleId":"294","replacedBy":"302"},{"ruleId":"296","replacedBy":"303"},{"ruleId":"285","severity":1,"message":"304","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":17},{"ruleId":"285","severity":1,"message":"305","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":14},{"ruleId":"285","severity":1,"message":"306","line":8,"column":10,"nodeType":"287","messageId":"288","endLine":8,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":26,"column":6,"nodeType":"309","endLine":26,"endColumn":8,"suggestions":"310"},{"ruleId":"307","severity":1,"message":"311","line":30,"column":6,"nodeType":"309","endLine":30,"endColumn":8,"suggestions":"312"},{"ruleId":"294","replacedBy":"313"},{"ruleId":"296","replacedBy":"314"},{"ruleId":"285","severity":1,"message":"315","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"316","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":13,"column":21,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"294","replacedBy":"318"},{"ruleId":"296","replacedBy":"319"},{"ruleId":"285","severity":1,"message":"320","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":23},{"ruleId":"285","severity":1,"message":"315","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"321","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":16},{"ruleId":"285","severity":1,"message":"289","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"316","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":13,"column":21,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"285","severity":1,"message":"322","line":14,"column":10,"nodeType":"287","messageId":"288","endLine":14,"endColumn":15},{"ruleId":"285","severity":1,"message":"323","line":16,"column":8,"nodeType":"287","messageId":"288","endLine":16,"endColumn":12},{"ruleId":"285","severity":1,"message":"324","line":20,"column":10,"nodeType":"287","messageId":"288","endLine":20,"endColumn":17},{"ruleId":"285","severity":1,"message":"325","line":20,"column":19,"nodeType":"287","messageId":"288","endLine":20,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":49,"column":29,"nodeType":"328","endLine":52,"endColumn":31},{"ruleId":"329","severity":1,"message":"330","line":75,"column":53,"nodeType":"331","messageId":"332","endLine":75,"endColumn":55},{"ruleId":"329","severity":1,"message":"330","line":9,"column":19,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":16,"column":19,"nodeType":"331","messageId":"332","endLine":16,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":23,"column":19,"nodeType":"331","messageId":"332","endLine":23,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":35,"column":24,"nodeType":"331","messageId":"332","endLine":35,"endColumn":26},{"ruleId":"307","severity":1,"message":"333","line":42,"column":6,"nodeType":"309","endLine":42,"endColumn":8,"suggestions":"334"},{"ruleId":"329","severity":1,"message":"330","line":104,"column":49,"nodeType":"331","messageId":"332","endLine":104,"endColumn":51},{"ruleId":"285","severity":1,"message":"316","line":7,"column":10,"nodeType":"287","messageId":"288","endLine":7,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":7,"column":21,"nodeType":"287","messageId":"288","endLine":7,"endColumn":30},{"ruleId":"285","severity":1,"message":"315","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":13},{"ruleId":"294","replacedBy":"335"},{"ruleId":"296","replacedBy":"336"},{"ruleId":"285","severity":1,"message":"320","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":23},{"ruleId":"285","severity":1,"message":"315","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"321","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":16},{"ruleId":"285","severity":1,"message":"289","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"316","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":13,"column":21,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"285","severity":1,"message":"322","line":14,"column":10,"nodeType":"287","messageId":"288","endLine":14,"endColumn":15},{"ruleId":"285","severity":1,"message":"323","line":16,"column":8,"nodeType":"287","messageId":"288","endLine":16,"endColumn":12},{"ruleId":"307","severity":1,"message":"333","line":39,"column":6,"nodeType":"309","endLine":39,"endColumn":8,"suggestions":"337"},{"ruleId":"329","severity":1,"message":"338","line":27,"column":26,"nodeType":"331","messageId":"332","endLine":27,"endColumn":28},{"ruleId":"329","severity":1,"message":"330","line":4,"column":19,"nodeType":"331","messageId":"332","endLine":4,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":21,"column":19,"nodeType":"331","messageId":"332","endLine":21,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":36,"column":19,"nodeType":"331","messageId":"332","endLine":36,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":45,"column":19,"nodeType":"331","messageId":"332","endLine":45,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":55,"column":19,"nodeType":"331","messageId":"332","endLine":55,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":13,"column":19,"nodeType":"331","messageId":"332","endLine":13,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":21,"column":19,"nodeType":"331","messageId":"332","endLine":21,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":27,"column":19,"nodeType":"331","messageId":"332","endLine":27,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":35,"column":19,"nodeType":"331","messageId":"332","endLine":35,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":43,"column":19,"nodeType":"331","messageId":"332","endLine":43,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":51,"column":19,"nodeType":"331","messageId":"332","endLine":51,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":60,"column":19,"nodeType":"331","messageId":"332","endLine":60,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":67,"column":19,"nodeType":"331","messageId":"332","endLine":67,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":76,"column":19,"nodeType":"331","messageId":"332","endLine":76,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":83,"column":19,"nodeType":"331","messageId":"332","endLine":83,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":92,"column":19,"nodeType":"331","messageId":"332","endLine":92,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":99,"column":19,"nodeType":"331","messageId":"332","endLine":99,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":106,"column":19,"nodeType":"331","messageId":"332","endLine":106,"endColumn":21},{"ruleId":"329","severity":1,"message":"338","line":114,"column":39,"nodeType":"331","messageId":"332","endLine":114,"endColumn":41},{"ruleId":"329","severity":1,"message":"330","line":119,"column":19,"nodeType":"331","messageId":"332","endLine":119,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":126,"column":19,"nodeType":"331","messageId":"332","endLine":126,"endColumn":21},{"ruleId":"329","severity":1,"message":"338","line":134,"column":39,"nodeType":"331","messageId":"332","endLine":134,"endColumn":41},{"ruleId":"329","severity":1,"message":"330","line":139,"column":19,"nodeType":"331","messageId":"332","endLine":139,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":146,"column":19,"nodeType":"331","messageId":"332","endLine":146,"endColumn":21},{"ruleId":"285","severity":1,"message":"300","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":21},{"ruleId":"285","severity":1,"message":"315","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":13},{"ruleId":"285","severity":1,"message":"289","line":11,"column":10,"nodeType":"287","messageId":"288","endLine":11,"endColumn":18},{"ruleId":"285","severity":1,"message":"317","line":12,"column":21,"nodeType":"287","messageId":"288","endLine":12,"endColumn":30},{"ruleId":"285","severity":1,"message":"339","line":11,"column":3,"nodeType":"287","messageId":"288","endLine":11,"endColumn":17},{"ruleId":"307","severity":1,"message":"340","line":39,"column":6,"nodeType":"309","endLine":39,"endColumn":8,"suggestions":"341"},{"ruleId":"329","severity":1,"message":"330","line":90,"column":41,"nodeType":"331","messageId":"332","endLine":90,"endColumn":43},{"ruleId":"329","severity":1,"message":"330","line":157,"column":50,"nodeType":"331","messageId":"332","endLine":157,"endColumn":52},{"ruleId":"329","severity":1,"message":"330","line":191,"column":49,"nodeType":"331","messageId":"332","endLine":191,"endColumn":51},{"ruleId":"329","severity":1,"message":"338","line":26,"column":27,"nodeType":"331","messageId":"332","endLine":26,"endColumn":29},{"ruleId":"329","severity":1,"message":"330","line":9,"column":19,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":17,"column":19,"nodeType":"331","messageId":"332","endLine":17,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":24,"column":19,"nodeType":"331","messageId":"332","endLine":24,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":34,"column":19,"nodeType":"331","messageId":"332","endLine":34,"endColumn":21},{"ruleId":"329","severity":1,"message":"338","line":37,"column":23,"nodeType":"331","messageId":"332","endLine":37,"endColumn":25},{"ruleId":"329","severity":1,"message":"330","line":45,"column":19,"nodeType":"331","messageId":"332","endLine":45,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":53,"column":18,"nodeType":"331","messageId":"332","endLine":53,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":61,"column":19,"nodeType":"331","messageId":"332","endLine":61,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":67,"column":18,"nodeType":"331","messageId":"332","endLine":67,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":74,"column":19,"nodeType":"331","messageId":"332","endLine":74,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":82,"column":19,"nodeType":"331","messageId":"332","endLine":82,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":90,"column":19,"nodeType":"331","messageId":"332","endLine":90,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":97,"column":19,"nodeType":"331","messageId":"332","endLine":97,"endColumn":21},{"ruleId":"285","severity":1,"message":"342","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":20},{"ruleId":"285","severity":1,"message":"343","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":17},{"ruleId":"285","severity":1,"message":"344","line":10,"column":10,"nodeType":"287","messageId":"288","endLine":10,"endColumn":18},{"ruleId":"285","severity":1,"message":"345","line":10,"column":20,"nodeType":"287","messageId":"288","endLine":10,"endColumn":31},{"ruleId":"307","severity":1,"message":"308","line":23,"column":6,"nodeType":"309","endLine":23,"endColumn":8,"suggestions":"346"},{"ruleId":"285","severity":1,"message":"320","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":23},{"ruleId":"285","severity":1,"message":"315","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"321","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":16},{"ruleId":"285","severity":1,"message":"289","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"316","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":13,"column":21,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"285","severity":1,"message":"322","line":14,"column":10,"nodeType":"287","messageId":"288","endLine":14,"endColumn":15},{"ruleId":"285","severity":1,"message":"347","line":15,"column":8,"nodeType":"287","messageId":"288","endLine":15,"endColumn":17},{"ruleId":"285","severity":1,"message":"323","line":16,"column":8,"nodeType":"287","messageId":"288","endLine":16,"endColumn":12},{"ruleId":"285","severity":1,"message":"348","line":20,"column":10,"nodeType":"287","messageId":"288","endLine":20,"endColumn":17},{"ruleId":"285","severity":1,"message":"349","line":20,"column":19,"nodeType":"287","messageId":"288","endLine":20,"endColumn":29},{"ruleId":"285","severity":1,"message":"320","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":23},{"ruleId":"285","severity":1,"message":"315","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"321","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":16},{"ruleId":"285","severity":1,"message":"289","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"316","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"317","line":13,"column":21,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"285","severity":1,"message":"322","line":14,"column":10,"nodeType":"287","messageId":"288","endLine":14,"endColumn":15},{"ruleId":"285","severity":1,"message":"347","line":15,"column":8,"nodeType":"287","messageId":"288","endLine":15,"endColumn":17},{"ruleId":"285","severity":1,"message":"323","line":16,"column":8,"nodeType":"287","messageId":"288","endLine":16,"endColumn":12},{"ruleId":"329","severity":1,"message":"330","line":61,"column":32,"nodeType":"331","messageId":"332","endLine":61,"endColumn":34},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'axio' is defined but never used.","'loadUser' is defined but never used.","'dispatch' is assigned a value but never used.","'isAuth' is assigned a value but never used.","no-native-reassign",["350"],"no-negated-in-lhs",["351"],["350"],["351"],"'useSelector' is defined but never used.","'AuthData' is assigned a value but never used.",["350"],["351"],"'Container' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["352"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["353"],["350"],["351"],"'axios' is defined but never used.","'showAlert' is defined but never used.","'hideAlert' is defined but never used.",["350"],["351"],"'Field' is defined but never used.","'MyAlerts' is defined but never used.","'login' is defined but never used.","'Card' is defined but never used.","'loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["354"],["350"],["351"],["355"],"Expected '!==' and instead saw '!='.","'getGithubRepos' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["356"],"'useHistory' is defined but never used.","'NavLink' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.",["357"],"'Accordion' is defined but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"358","fix":"362"},{"desc":"358","fix":"363"},{"desc":"364","fix":"365"},{"desc":"358","fix":"366"},"Update the dependencies array to be: [dispatch]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch, props]",{"range":"369","text":"370"},{"range":"371","text":"368"},{"range":"372","text":"368"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"373","text":"374"},{"range":"375","text":"368"},[820,822],"[dispatch]",[916,918],"[dispatch, props]",[998,1000],[1140,1142],[1046,1048],"[dispatch, props.match.params.id]",[724,726]]